// Code generated by protoc-gen-go. DO NOT EDIT.
// source: employee.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Employee struct {
	EmployeeId           string   `protobuf:"bytes,1,opt,name=employeeId,proto3" json:"employeeId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Department           string   `protobuf:"bytes,3,opt,name=department,proto3" json:"department,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Employee) Reset()         { *m = Employee{} }
func (m *Employee) String() string { return proto.CompactTextString(m) }
func (*Employee) ProtoMessage()    {}
func (*Employee) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb50a19aa79a6eac, []int{0}
}

func (m *Employee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Employee.Unmarshal(m, b)
}
func (m *Employee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Employee.Marshal(b, m, deterministic)
}
func (m *Employee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Employee.Merge(m, src)
}
func (m *Employee) XXX_Size() int {
	return xxx_messageInfo_Employee.Size(m)
}
func (m *Employee) XXX_DiscardUnknown() {
	xxx_messageInfo_Employee.DiscardUnknown(m)
}

var xxx_messageInfo_Employee proto.InternalMessageInfo

func (m *Employee) GetEmployeeId() string {
	if m != nil {
		return m.EmployeeId
	}
	return ""
}

func (m *Employee) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Employee) GetDepartment() string {
	if m != nil {
		return m.Department
	}
	return ""
}

type EmployeeRes struct {
	Created              bool     `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmployeeRes) Reset()         { *m = EmployeeRes{} }
func (m *EmployeeRes) String() string { return proto.CompactTextString(m) }
func (*EmployeeRes) ProtoMessage()    {}
func (*EmployeeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb50a19aa79a6eac, []int{1}
}

func (m *EmployeeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmployeeRes.Unmarshal(m, b)
}
func (m *EmployeeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmployeeRes.Marshal(b, m, deterministic)
}
func (m *EmployeeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmployeeRes.Merge(m, src)
}
func (m *EmployeeRes) XXX_Size() int {
	return xxx_messageInfo_EmployeeRes.Size(m)
}
func (m *EmployeeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EmployeeRes.DiscardUnknown(m)
}

var xxx_messageInfo_EmployeeRes proto.InternalMessageInfo

func (m *EmployeeRes) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

type EmployeeIdReq struct {
	EmployeeId           string   `protobuf:"bytes,1,opt,name=employeeId,proto3" json:"employeeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmployeeIdReq) Reset()         { *m = EmployeeIdReq{} }
func (m *EmployeeIdReq) String() string { return proto.CompactTextString(m) }
func (*EmployeeIdReq) ProtoMessage()    {}
func (*EmployeeIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb50a19aa79a6eac, []int{2}
}

func (m *EmployeeIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmployeeIdReq.Unmarshal(m, b)
}
func (m *EmployeeIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmployeeIdReq.Marshal(b, m, deterministic)
}
func (m *EmployeeIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmployeeIdReq.Merge(m, src)
}
func (m *EmployeeIdReq) XXX_Size() int {
	return xxx_messageInfo_EmployeeIdReq.Size(m)
}
func (m *EmployeeIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EmployeeIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_EmployeeIdReq proto.InternalMessageInfo

func (m *EmployeeIdReq) GetEmployeeId() string {
	if m != nil {
		return m.EmployeeId
	}
	return ""
}

func init() {
	proto.RegisterType((*Employee)(nil), "proto.Employee")
	proto.RegisterType((*EmployeeRes)(nil), "proto.EmployeeRes")
	proto.RegisterType((*EmployeeIdReq)(nil), "proto.EmployeeIdReq")
}

func init() { proto.RegisterFile("employee.proto", fileDescriptor_eb50a19aa79a6eac) }

var fileDescriptor_eb50a19aa79a6eac = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xcd, 0x2d, 0xc8,
	0xc9, 0xaf, 0x4c, 0x4d, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x71,
	0x5c, 0x1c, 0xae, 0x50, 0x09, 0x21, 0x39, 0x2e, 0x2e, 0x98, 0x22, 0xcf, 0x14, 0x09, 0x46, 0x05,
	0x46, 0x0d, 0xce, 0x20, 0x24, 0x11, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x26,
	0xb0, 0x0c, 0x98, 0x0d, 0xd2, 0x93, 0x92, 0x5a, 0x90, 0x58, 0x54, 0x92, 0x9b, 0x9a, 0x57, 0x22,
	0xc1, 0x0c, 0xd1, 0x83, 0x10, 0x51, 0x52, 0xe7, 0xe2, 0x86, 0x99, 0x1f, 0x94, 0x5a, 0x2c, 0x24,
	0xc1, 0xc5, 0x9e, 0x5c, 0x94, 0x9a, 0x58, 0x92, 0x0a, 0x31, 0x9f, 0x23, 0x08, 0xc6, 0x55, 0xd2,
	0xe7, 0xe2, 0x75, 0x85, 0x5b, 0x15, 0x94, 0x5a, 0x48, 0xc8, 0x35, 0x46, 0x1d, 0x8c, 0x5c, 0xfc,
	0x30, 0x1d, 0x2e, 0xa9, 0x25, 0x89, 0x99, 0x39, 0xc5, 0x42, 0x96, 0x5c, 0x02, 0x41, 0xa9, 0xe9,
	0x99, 0xc5, 0x25, 0xa9, 0x45, 0x70, 0x5f, 0xf1, 0x43, 0x3c, 0xac, 0x07, 0x13, 0x90, 0x12, 0x42,
	0x13, 0x08, 0x4a, 0x2d, 0x56, 0x62, 0x10, 0xb2, 0xe2, 0xe2, 0x77, 0x4f, 0x2d, 0x81, 0x89, 0x39,
	0x55, 0x7a, 0xa6, 0x08, 0x89, 0xa0, 0x29, 0x04, 0xbb, 0x4b, 0x0a, 0xdd, 0x3c, 0x25, 0x06, 0x27,
	0x09, 0x2e, 0x48, 0x68, 0x3a, 0xc1, 0xbd, 0x10, 0x00, 0xe2, 0x06, 0x30, 0x26, 0xb1, 0x81, 0xc5,
	0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x56, 0xf5, 0xbe, 0x39, 0x7e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EmployeeDetailsClient is the client API for EmployeeDetails service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmployeeDetailsClient interface {
	RegisterEmployee(ctx context.Context, in *Employee, opts ...grpc.CallOption) (*EmployeeRes, error)
	GetEmployeeById(ctx context.Context, in *EmployeeIdReq, opts ...grpc.CallOption) (*Employee, error)
}

type employeeDetailsClient struct {
	cc *grpc.ClientConn
}

func NewEmployeeDetailsClient(cc *grpc.ClientConn) EmployeeDetailsClient {
	return &employeeDetailsClient{cc}
}

func (c *employeeDetailsClient) RegisterEmployee(ctx context.Context, in *Employee, opts ...grpc.CallOption) (*EmployeeRes, error) {
	out := new(EmployeeRes)
	err := c.cc.Invoke(ctx, "/proto.EmployeeDetails/RegisterEmployee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *employeeDetailsClient) GetEmployeeById(ctx context.Context, in *EmployeeIdReq, opts ...grpc.CallOption) (*Employee, error) {
	out := new(Employee)
	err := c.cc.Invoke(ctx, "/proto.EmployeeDetails/GetEmployeeById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmployeeDetailsServer is the server API for EmployeeDetails service.
type EmployeeDetailsServer interface {
	RegisterEmployee(context.Context, *Employee) (*EmployeeRes, error)
	GetEmployeeById(context.Context, *EmployeeIdReq) (*Employee, error)
}

// UnimplementedEmployeeDetailsServer can be embedded to have forward compatible implementations.
type UnimplementedEmployeeDetailsServer struct {
}

func (*UnimplementedEmployeeDetailsServer) RegisterEmployee(ctx context.Context, req *Employee) (*EmployeeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterEmployee not implemented")
}
func (*UnimplementedEmployeeDetailsServer) GetEmployeeById(ctx context.Context, req *EmployeeIdReq) (*Employee, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEmployeeById not implemented")
}

func RegisterEmployeeDetailsServer(s *grpc.Server, srv EmployeeDetailsServer) {
	s.RegisterService(&_EmployeeDetails_serviceDesc, srv)
}

func _EmployeeDetails_RegisterEmployee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Employee)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmployeeDetailsServer).RegisterEmployee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EmployeeDetails/RegisterEmployee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmployeeDetailsServer).RegisterEmployee(ctx, req.(*Employee))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmployeeDetails_GetEmployeeById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmployeeIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmployeeDetailsServer).GetEmployeeById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EmployeeDetails/GetEmployeeById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmployeeDetailsServer).GetEmployeeById(ctx, req.(*EmployeeIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmployeeDetails_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.EmployeeDetails",
	HandlerType: (*EmployeeDetailsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterEmployee",
			Handler:    _EmployeeDetails_RegisterEmployee_Handler,
		},
		{
			MethodName: "GetEmployeeById",
			Handler:    _EmployeeDetails_GetEmployeeById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "employee.proto",
}
